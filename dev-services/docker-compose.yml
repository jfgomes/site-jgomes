version: "3.9"
services:
    php-apache:
        container_name: jgomes_site_dev_php-apache
        restart: always
        build: './php-apache'
        ports:
            - "8080:81"
        volumes:
            - ../:/var/www/html
        depends_on:
            - mysql
        networks:
            - jgomes-site_dev-docker
    mysql:
        container_name: jgomes_site_dev_mysql
        build: './mysql'
        env_file:
            - .env
        ports:
            - "3306:3306"
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
        volumes:
            - dbData:/var/lib/mysql
        networks:
            - jgomes-site_dev-docker

    phpmyadmin:
        container_name: jgomes_site_dev_phpmyadmin
        image: phpmyadmin/phpmyadmin
        platform: linux/amd64  # Forces the platform to amd64
        env_file:
            - .env
        ports:
            - "8092:80"
        environment:
            PMA_HOST: mysql
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
        networks:
            - jgomes-site_dev-docker
    rabbitmq:
        container_name: jgomes_site_dev_rabbit
        build:
            context: './rabbitmq'
        env_file:
            - .env
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            -  RABBITMQ_USER=${RABBIT_USER}
            -  RABBITMQ_PASSWORD=${RABBIT_PASS}
            -  RABBITMQ_DEFAULT_USER=${RABBIT_USER}
            -  RABBITMQ_DEFAULT_PASS=${RABBIT_PASS}
        networks:
            - jgomes-site_dev-docker
    redis:
        container_name: jgomes_site_dev_redis
        restart: always
        build: './redis'
        volumes:
            - redis:/var/lib/redis
            - dbRedis:/data
        ports:
            - "6378:6378"
        networks:
            - jgomes-site_dev-docker

    redis-commander:
        container_name: jgomes_site_dev_redis-commander
        build: './redis-commander'
        platform: linux/amd64  # Forces the platform to amd64
        restart: always
        ports:
            - "8082:8081"
        networks:
            - jgomes-site_dev-docker
        depends_on:
            - redis
        environment:
            - REDIS_HOSTS=${REDIS_HOSTS}
            - HTTP_USER=${REDIS_USER}
            - HTTP_PASSWORD=${REDIS_PASS}

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
        container_name: jgomes_site_dev_elasticsearch
        environment:
            - node.name=elasticsearch
            - cluster.name=es-single-node
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
            - ELASTIC_USERNAME=${ELASTICSEARCH_USERNAME}
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - esdata:/usr/share/elasticsearch/data
            - ./es/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            - jgomes-site_dev-docker

networks:
    jgomes-site_dev-docker:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: "172.18.0.0/16"

volumes:
    dbData:
    dbRedis:
    redis:
    esdata:
        driver: local
