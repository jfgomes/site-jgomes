["name" => "to" , "email" => "to@to.to", "subject" => "test subject" , "content" => "test message"]


{
    "name": "to",
    "email": "to@to.to",
    "subject": "test subject",
    "content": "test message"
}



php artisan migrate --path=database/migrations/2024_01_21_210119_create_messages_table.php


<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Messages extends Model
{
    protected $table = 'messages';

    protected $fillable = ['campo1', 'campo2'];
}




Os namespaces App\Jobs e App\Console em Laravel são usados para organizar diferentes tipos de classes em suas aplicações.

App\Jobs Namespace:

Finalidade: O namespace App\Jobs é usado para armazenar classes de trabalhos em segundo plano (jobs) que podem ser executadas em filas.
Uso Típico: Jobs em Laravel são usados para executar tarefas em segundo plano, como processamento de fila, envio de e-mails e execução de operações demoradas.
Exemplo: Quando você cria um job usando o comando php artisan make:job, o arquivo gerado estará no namespace App\Jobs.
php
Copy code
namespace App\Jobs;

use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;

class ExampleJob implements ShouldQueue
{
    use InteractsWithQueue, SerializesModels;

    public function handle()
    {
        // Lógica do job
    }
}
App\Console Namespace:

Finalidade: O namespace App\Console é usado para armazenar classes relacionadas à CLI (Interface de Linha de Comando) do Laravel, como comandos personalizados.
Uso Típico: Comandos personalizados que você cria para sua aplicação Laravel são geralmente armazenados no namespace App\Console.
Exemplo: Quando você cria um comando usando o comando php artisan make:command, o arquivo gerado estará no namespace App\Console.
php
Copy code
namespace App\Console\Commands;

use Illuminate\Console\Command;

class ExampleCommand extends Command
{
    protected $signature = 'example:command';
    protected $description = 'Exemplo de um comando personalizado.';

    public function handle()
    {
        // Lógica do comando
    }
}
Em resumo, App\Jobs é usado para armazenar classes relacionadas a trabalhos em segundo plano e filas, enquanto App\Console é usado para classes relacionadas à CLI, como comandos personalizados. Ambos são usados para organizar o código de maneira mais coesa e fácil de entender.


https://medium.com/@lpjfilho/filas-e-mensageria-com-rabbitmq-e-laravel-parte-2-a9a052b8d603



<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;

class DbBackups extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'db:backups';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Command to do db backups';

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Execute the console command.
     *
     * @return int
     */
    public function handle()
    {
        $ip   = env('DB_HOST'); //exec("docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' my_routineris_mysql");
        $db   = env('DB_DATABASE');

        $path     = base_path() . "/storage/database/";
        if (!file_exists($path)) {
            mkdir($path, 0600, true);
        }
        $file     = "$path/db_backup.sql";
        $file_bak = "$path/db_backup_" . date("Y_m_d_H_s_i") . ".sql";

        $config = base_path() . "/app/Console/Commands/config.cnf";
        if (true === file_exists($file)) {
            unlink($file);
        }

        exec("mysqldump --defaults-extra-file=$config --host=$ip $db > $file");
        exec("mysqldump --defaults-extra-file=$config --host=$ip $db > $file_bak");

        // limit the number of backups to 30 files
        exec( "cd $path && ls -t | tail -n +31 | xargs -I {} rm {}");

        return 0;
    }
}

service accounts





#!/bin/bash

# Kill artisan default port to avoid it to create other ports
lsof -ti :8000 | xargs -r kill -9

# Refresh local docker services
cd dev-services && docker-compose down

# Wait a bit until make sure the project is compliantly don+wn
sleep 10

# Kill existing processes
lsof -ti :5672 | xargs -r kill -9

sleep 10

# Run project
docker-compose up -d

# Project vars can go here, like:
export APP_ENV=local

# Back to root
cd ..

# Remove an create storage/db-backups directory if it exists
rm -rf storage/db-backups
mkdir -p storage/db-backups
chmod 755 storage/db-backups

# Clean logs
echo -n > storage/logs/laravel.log
echo -n > storage/logs/messages.log
echo -n > storage/logs/messages-backups.log

# Remove cron logs directory if it exists
rm -rf cronlogs

# Create new cron logs directory
mkdir -p cronlogs

# Give some time to project
#sleep 5

# Init messages-rabbit-consume in background
echo "Starting cron.."
while true
do
    #echo "Running messages rabbit consumer.."
    #php artisan queue:messages >> cronlogs/messages-rabbit-consumer.log 2>&1

    echo "Running messages backups.."
    php artisan db:messages-backup-to-cloud >> cronlogs/messages-backups.log 2>&1

    sleep 150
done &

# Init server
php artisan serve &

# Code coverage
rm public/coverage-report
cd public && ln -s ../coverage-report/ coverage-report && cd ..

echo "
                                                                   dddddddd
RRRRRRRRRRRRRRRRR                                                  d::::::d                                      tttt
R::::::::::::::::R                                                 d::::::d                                   ttt:::t
R::::::RRRRRR:::::R                                                d::::::d                                   t:::::t
RR:::::R     R:::::R                                               d:::::d                                    t:::::t
  R::::R     R:::::R    eeeeeeeeeeee    aaaaaaaaaaaaa      ddddddddd:::::dyyyyyyy           yyyyyyy     ttttttt:::::ttttttt       ooooooooooo
  R::::R     R:::::R  ee::::::::::::ee  a::::::::::::a   dd::::::::::::::d y:::::y         y:::::y      t:::::::::::::::::t     oo:::::::::::oo
  R::::RRRRRR:::::R  e::::::eeeee:::::eeaaaaaaaaa:::::a d::::::::::::::::d  y:::::y       y:::::y       t:::::::::::::::::t    o:::::::::::::::o
  R:::::::::::::RR  e::::::e     e:::::e         a::::ad:::::::ddddd:::::d   y:::::y     y:::::y        tttttt:::::::tttttt    o:::::ooooo:::::o
  R::::RRRRRR:::::R e:::::::eeeee::::::e  aaaaaaa:::::ad::::::d    d:::::d    y:::::y   y:::::y               t:::::t          o::::o     o::::o
  R::::R     R:::::Re:::::::::::::::::e aa::::::::::::ad:::::d     d:::::d     y:::::y y:::::y                t:::::t          o::::o     o::::o
  R::::R     R:::::Re::::::eeeeeeeeeee a::::aaaa::::::ad:::::d     d:::::d      y:::::y:::::y                 t:::::t          o::::o     o::::o
  R::::R     R:::::Re:::::::e         a::::a    a:::::ad:::::d     d:::::d       y:::::::::y                  t:::::t    tttttto::::o     o::::o
RR:::::R     R:::::Re::::::::e        a::::a    a:::::ad::::::ddddd::::::dd       y:::::::y                   t::::::tttt:::::to:::::ooooo:::::o
R::::::R     R:::::R e::::::::eeeeeeeea:::::aaaa::::::a d:::::::::::::::::d        y:::::y                    tt::::::::::::::to:::::::::::::::o
R::::::R     R:::::R  ee:::::::::::::e a::::::::::aa:::a d:::::::::ddd::::d       y:::::y                       tt:::::::::::tt oo:::::::::::oo
RRRRRRRR     RRRRRRR    eeeeeeeeeeeeee  aaaaaaaaaa  aaaa  ddddddddd   ddddd      y:::::y                          ttttttttttt     ooooooooooo
                                                                                y:::::y
                                                                               y:::::y
                                                                              y:::::y
                                                                             y:::::y
                                                                            yyyyyyy



            dddddddd
            d::::::d                                                 !!!
            d::::::d                                                !!:!!
            d::::::d                                                !:::!
            d:::::d                                                 !:::!
    ddddddddd:::::d     eeeeeeeeeeee  vvvvvvv           vvvvvvv     !:::!
  dd::::::::::::::d   ee::::::::::::ee v:::::v         v:::::v      !:::!
 d::::::::::::::::d  e::::::eeeee:::::eev:::::v       v:::::v       !:::!
d:::::::ddddd:::::d e::::::e     e:::::e v:::::v     v:::::v        !:::!
d::::::d    d:::::d e:::::::eeeee::::::e  v:::::v   v:::::v         !:::!
d:::::d     d:::::d e:::::::::::::::::e    v:::::v v:::::v          !:::!
d:::::d     d:::::d e::::::eeeeeeeeeee      v:::::v:::::v           !!:!!
d:::::d     d:::::d e:::::::e                v:::::::::v             !!!
d::::::ddddd::::::dde::::::::e                v:::::::v
 d:::::::::::::::::d e::::::::eeeeeeee         v:::::v               !!!
  d:::::::::ddd::::d  ee:::::::::::::e          v:::v               !!:!!
   ddddddddd   ddddd    eeeeeeeeeeeeee           vvv                 !!!

"



